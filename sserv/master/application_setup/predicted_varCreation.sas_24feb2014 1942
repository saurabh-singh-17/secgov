/*Successfully converted to SAS Server Format*/
*processbody;
options mprint mlogic symbolgen mfile;

proc printto log="&iteration_path./Predicted_VarCreation_Log.log";
run;
quit;
/*      log="&iteration_path./Predicted_VarCreation_Log.log" */
/*proc printto print="&iteration_path./Predicted_VarCreation_Output.out";*/
      

libname in "&input_path.";
libname iter "&iteration_path.";


%MACRO pred_varCreation;

      proc sort data = &dataset_name.;
            by primary_key_1644;
            run;quit;

      %if "&type_model." = "linear" %then %do;
            proc sort data = iter.outdata;
                  by primary_key_1644;
                  run;quit;

            data &dataset_name.(rename=(pred=&newVar_pred.));
                  merge &dataset_name.(in=ds1) iter.outdata(in=ds2 keep=primary_key_1644 pred);
                  by primary_key_1644;
                  if ds1 or ds2;
                  run;

            data &dataset_name.(drop=&newVar_pred.);
                  set &dataset_name.;
                  Predicted = &newVar_pred.*1;
                  run;

            data &dataset_name.(rename = (Predicted=&newVar_pred.));
                  set &dataset_name.;
                  run;

      %end;

      %if "&type_model." = "logistic" %then %do;
            proc sort data = iter.pred;
                  by primary_key_1644;
                  run;quit;

            data &dataset_name.(rename=(%if "&newVar_pred." ^= "" %then %do; phat=&newVar_pred. %end; %if "&newVar_resp." ^= "" %then %do; _INTO_=&newVar_resp. %end;));
                  merge &dataset_name.(in=ds1) iter.pred(in=ds2 keep=primary_key_1644 %if "&newVar_pred." ^= "" %then %do;phat %end; %if "&newVar_resp." ^= "" %then %do; _INTO_ %end;);
                  by primary_key_1644;
                  if ds1 or ds2;
                  run;
            
			%if "&newVar_resp." ^= "" %then %do;
				%let dsid = %sysfunc(open(&dataset_name.));
				%let varnum = %sysfunc(varnum(&dsid,&newVar_resp.));
				%let vartype_newVar_resp = %sysfunc(vartype(&dsid,&varnum));
				%let rc = %sysfunc(close(&dsid));
			%end;
			
            data &dataset_name.(rename=(%if "&newVar_pred." ^= "" %then %do;&newVar_pred. %end; %if "&newVar_resp." ^= "" %then %do; &newVar_resp. %end;));
                set &dataset_name.;
				%if "&newVar_pred." ^= "" %then %do;
					Predicted = &newVar_pred.*1;
				%end;	
				%if "&newVar_resp." ^= "" %then %do;
					%if &vartype_newVar_resp. = N %then %do;
						Response = &newVar_resp.*1;
					%end;
				%end;
				run;

            data &dataset_name.(rename=(%if "&newVar_pred." ^= "" %then %do;Predicted=&newVar_pred. %end; 
                                                      %if "&newVar_resp." ^= "" %then %do; Response = &newVar_resp. %end;));
                  set &dataset_name.;
                  run;

      %end;

      %if "&type_model." = "cluster" %then %do;
            %if %sysfunc(exist(iter.final_tree)) %then %do;
                  %let inData = final_tree;
                  data iter.final_tree;
                        informat primary_key_1644 8.;
                        format primary_key_1644 8.;
                        set iter.final_tree;
                        primary_key_1644=put(compress(_NAME_,'OB'),8.);
                        run;
                  proc sort data = iter.final_tree;
                        by primary_key_1644;
                        run;

            %end;
            %if %sysfunc(exist(iter.final_cluster)) %then %do;
                  %let inData = final_cluster;
            %end;

            %if "&inData." ^= "" %then %do;
                  proc sort data = iter.&inData.;
                        by primary_key_1644;
                        run;quit;

                  data &dataset_name.(rename=(cluster=&newVar_pred.));
                        merge &dataset_name.(in=ds1) iter.&inData.(in=ds2 keep=primary_key_1644 cluster);
                        by primary_key_1644;
                        if ds1 or ds2;
                        run;

                  data &dataset_name.(drop=&newVar_pred.);
                  set &dataset_name.;
                  Clust = &newVar_pred.*1;
                  run;

            data &dataset_name.(rename = (Clust = &newVar_pred.));
                  set &dataset_name.;
                  run;
            %end;
      %end;

	   %if "&type_model." = "mixed" %then %do;
            proc sort data = iter.mixedoutput;
                  by primary_key_1644;
                  run;quit;

            data &dataset_name.(rename=(pred=&newVar_pred.));
                  merge &dataset_name.(in=ds1) iter.mixedoutput(in=ds2 keep=primary_key_1644 Pred);
                  by primary_key_1644;
                  if ds1 or ds2;
                  run;

            data &dataset_name.(drop=&newVar_pred.);
                  set &dataset_name.;
                  Predicted = &newVar_pred.*1;
                  run;

            data &dataset_name.(rename = (Predicted=&newVar_pred.));
                  set &dataset_name.;
                  run;

      %end;

	  %if "&type_model." = "genmod" %then %do;
            proc sort data = iter.pred_var;
                  by primary_key_1644;
                  run;quit;

            data &dataset_name.(rename=(pred=&newVar_pred.));
                  merge &dataset_name.(in=ds1) iter.pred_var(in=ds2 keep=primary_key_1644 pred);
                  by primary_key_1644;
                  if ds1 or ds2;
                  run;

            data &dataset_name.(drop=&newVar_pred.);
                  set &dataset_name.;
                  Predicted = &newVar_pred.*1;
                  run;

            data &dataset_name.(rename = (Predicted=&newVar_pred.));
                  set &dataset_name.;
                  run;

      %end;

	  %if "&type_model." = "arimax" %then %do;

		  data temp;
		  set iter.forecast;
		  run;

		  data temp;
		  set temp;
		  primary_key_1644 = _n_;
		  run;

            proc sort data = temp;
                  by primary_key_1644;
                  run;quit;

            data &dataset_name.(rename=(FORECAST=&newVar_pred.));
                  merge &dataset_name.(in=ds1) temp(in=ds2 keep=primary_key_1644 FORECAST);
                  by primary_key_1644;
                  if ds1 or ds2;
                  run;

            data &dataset_name.(drop=&newVar_pred.);
                  set &dataset_name.;
                  Predicted = &newVar_pred.*1;
                  run;

            data &dataset_name.(rename = (Predicted=&newVar_pred.));
                  set &dataset_name.;
                  run;

      %end;

%MEND pred_varCreation;
%pred_varCreation;

/* flex uses this file to test if the code has finished running */
data _null_;
      v1= "PREDICTED_VAR_CREATION_COMPLETED";
      file "&input_path./PREDICTED_VAR_CREATION_COMPLETED.txt";
      put v1;
      run;




proc datasets lib=work kill nolist;
quit;

