#------------------------------------------------------------------------------------------------------#
#--                                                                                                  --#   
#-- Project Name :  NumericalCategorical.R                                                           --#
#-- Description  :  Categorizes the variable                      									 --#
#-- Return type  :  Creates CSV's at a location according to given inputs                            --#
#-- Author       :  Arun Pillai                                                                      --#                 
#------------------------------------------------------------------------------------------------------#

# writing a function to recognise  a date format
dateformat<-function(date){
  index<-(which(date==""))
  if (length(index)!=0){
    date<-date[-index]
  }
  form<-"unknown"
  temp<-as.character(date[1])
  if(any(grepl("[[:alpha:]]",date) == "TRUE"))
  {
    return("unknown")
  }
  if(grepl(" ",temp)){
    date<-apply(as.data.frame(date),1,function(x){strsplit(as.character(x)," ")[[1]][1]})
  }
  date<-as.character(date)
  if (is.null(date))
    return("unknown")  
  if(is.na(mean(as.numeric(date),na.rm=T)) == "FALSE")
  {
    return("unknown")
  }
  if((length(which(is.na(as.numeric(gsub("/","",date,fixed=T))) == TRUE)) > length(which(is.na(as.numeric(gsub("/","",date,fixed=T))) == FALSE)))   &
       (length(which(is.na(as.numeric(gsub("-","",date,fixed=T))) == TRUE)) > length(which(is.na(as.numeric(gsub("-","",date,fixed=T))) == FALSE))))
    return("unknown")
  if (all(is.na(date))) 
    return(NA)
  val<-length(date)
  if(val > 100){val= 100}
  date[which(date=='')] <- NA
  if(!is.na(as.numeric(substr(date[1],1,4)))){
    decide<-apply(as.data.frame(date[1:val]),1,function(x){unlist(strsplit(x,"[[:punct:]]"))})
    split<-substr(date[1],5,5)
    decide<-as.data.frame(decide)
    max1<-max(as.numeric(as.character(as.matrix(decide[2,]))),na.rm=T)
    max2<-max(as.numeric(as.character(as.matrix(decide[3,]))),na.rm=T)
    if(max1 > 12 & max2 <= 12){form<-paste("%Y",split,"%d",split,"%m",sep="")}
    if(max1 <= 12 & max2 >= 12){form<-paste("%Y",split,"%m",split,"%d",sep="")}
    if(max1 <= 12 & max2 <= 12){form<-paste("%Y",split,"%m",split,"%d",sep="")}
  }else{
    decide<-apply(as.data.frame(date[1:val]),1,function(x){unlist(strsplit(x,"[[:punct:]]"))})
    split<-substr(date[1],6-(10-nchar(date[1])),6-(10-nchar(date[1])))
    decide<-as.data.frame(decide)
    max1<-max(as.numeric(as.character(as.matrix(decide[1,]))),na.rm=T)
    max2<-max(as.numeric(as.character(as.matrix(decide[2,]))),na.rm=T)
    if(max1 > 12 && max2 <= 12){form<-paste("%d",split,"%m",split,"%Y",sep="")}
    if(max1 <= 12 & max2 >= 12){form<-paste("%m",split,"%d",split,"%Y",sep="")}
    if(max1 <= 12 & max2 <= 12){form<-paste("%m",split,"%d",split,"%Y",sep="")}
  }
  if(max(nchar(date)) <= 8)
  {
    decide<-apply(as.data.frame(date[1:val]),1,function(x){unlist(strsplit(x,"[[:punct:]]"))})
    split<-substr(date[1],nchar(date[1])-2,nchar(date[1])-2)
    decide<-as.data.frame(decide)
    max1<-max(as.numeric(as.character(as.matrix(decide[1,]))),na.rm=T)
    max2<-max(as.numeric(as.character(as.matrix(decide[2,]))),na.rm=T)
    if(max1 > 12 && max2 <= 12){form<-paste("%d",split,"%m",split,"%y",sep="")}
    if(max1 <= 12 & max2 >= 12){form<-paste("%m",split,"%d",split,"%y",sep="")}
    if(max1 <= 12 & max2 <= 12){form<-paste("%m",split,"%d",split,"%y",sep="")}
  }
  if(nchar(temp[1]) > 10 & nchar(temp[1]) <= 16){form<- paste(form," %H:%M",sep="")}
  if(nchar(temp[1]) > 16){form<- paste(form," %H:%M:%S",sep="")}
  return(form)
}

#------------------------------------------------------------------------------
# parameter play
#------------------------------------------------------------------------------
frequency=as.numeric(frequency)
#------------------------------------------------------------------------------



#------------------------------------------------------------------------------
# loading the data
#------------------------------------------------------------------------------
load(paste(input_path,"/dataworking.RData",sep=""))
dataworking <- subset(x=dataworking, select=var_names)
#------------------------------------------------------------------------------



#------------------------------------------------------------------------------
# Getting the class of all variables
# Separating them into numeric, string & date 
#------------------------------------------------------------------------------
c_numeric_string                 <- as.character(sapply(dataworking,class))
c_numeric_string                 <- gsub(pattern="logical",
                                         replacement="numeric",
                                         x=c_numeric_string)
c_numeric_string                 <- gsub(pattern="integer",
                                         replacement="numeric",
                                         x=c_numeric_string)
c_numeric_string                 <- gsub(pattern="factor",
                                         replacement="string",
                                         x=c_numeric_string)
c_numeric_string                 <- gsub(pattern="character",
                                         replacement="string",
                                         x=c_numeric_string)

n_index_string                   <- which(c_numeric_string == "string")
if (length(n_index_string)) {
  x_temp                         <- dataworking[, n_index_string, drop=FALSE]
  x_temp                         <- apply(as.matrix(x_temp),2,dateformat)
  x_temp                         <- as.data.frame(x_temp)
  n_index_date                   <- which(x_temp != "unknown")
  if (!length(n_index_date)) break
  n_index_date                   <- n_index_string[n_index_date]
  c_numeric_string[n_index_date] <- "date"
}
#------------------------------------------------------------------------------



#------------------------------------------------------------------------------
# Categorical/Continuous
#------------------------------------------------------------------------------
n_freq                           <- sapply(X=dataworking,
                                           FUN=function(x) length(unique(x)))
c_continuous_categorical         <- rep("continuous", length(n_freq))
n_index_categorical              <- which(n_freq <= frequency)
if (length(n_index_categorical)) {
  c_continuous_categorical[n_index_categorical] <- "categorical"
}
#------------------------------------------------------------------------------



#------------------------------------------------------------------------------
# output
#------------------------------------------------------------------------------
var.class=data.frame(c_numeric_string,c_continuous_categorical,n_freq,var_names)
names(var.class)=c("NUM_STR","CATEGORY","FREQ","NAME")

write.csv(var.class,
          file = paste(output_path, "categorical_reconfig.csv", sep="/"), 
          quote=FALSE, row.names=FALSE)
#------------------------------------------------------------------------------



#------------------------------------------------------------------------------
# completed
#------------------------------------------------------------------------------
write("MANUAL_CATEGORIZATION_COMPLETED",
      file = paste(output_path, "categorical_completed.txt", sep="/"))
#------------------------------------------------------------------------------